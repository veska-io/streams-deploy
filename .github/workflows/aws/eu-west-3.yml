name: 'Deploy Connectors AWS eu-west-3'

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
      
    steps:
        - uses: actions/checkout@v4
          with:
            path: 'streams-deploy'

        - uses: actions/checkout@v4
          with:
            repository: 'veska-io/streams-connectors'
            path: 'streams-connectors'
            fetch-depth: 0
            fetch-tags: true

        - name: Generate Versions
          run: |-
            cp streams-deploy/scripts/generate_versions.sh streams-connectors/generate_versions.sh
            cd streams-connectors

            ./generate_versions.sh
            cp connectors.tfvars ../streams-deploy/deployments/aws/exchanges-connectors/eu-north-1/connectors.tfvars
            cp connectors.tfvars ../streams-deploy/deployments/aws/exchanges-connectors/eu-west-3/connectors.tfvars
            cp connectors.tfvars ../streams-deploy/deployments/aws/exchanges-connectors/eu-central-1/connectors.tfvars

            cd $GITHUB_WORKSPACE

        - name: Configure AWS Credentials
          uses: aws-actions/configure-aws-credentials@v3
          with:
            role-to-assume: arn:aws:iam::869429936892:role/github-deploy
            role-session-name: samplerolesession
            aws-region: eu-west-3

        - uses: hashicorp/setup-terraform@v3

        - name: Deploy eu-west-3
          run: |-
            export TF_VAR_CLICKHOUSE_HOST="${{ secrets.CLICKHOUSE_HOST }}"
            export TF_VAR_CLICKHOUSE_DATABASE="${{ secrets.CLICKHOUSE_DATABASE }}"
            export TF_VAR_CLICKHOUSE_USER="${{ secrets.CLICKHOUSE_USER }}"
            export TF_VAR_CLICKHOUSE_PASSWORD="${{ secrets.CLICKHOUSE_PASSWORD }}"

            cd streams-deploy/deployments/aws/exchanges-connectors/eu-west-3
            terraform init

            terraform apply -no-color -input=false -var-file=connectors.tfvars -auto-approve